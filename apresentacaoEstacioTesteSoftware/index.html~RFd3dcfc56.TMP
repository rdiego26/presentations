<!doctype html>
<html lang="pt-br">

	<head>
		<meta charset="utf-8">

		<title>Teste de Software</title>

        <link rel="shortcut icon" href="./favicon.ico" type="image/x-icon">

		<meta name="description" content="Apresentação sobre Teste de Software - Estácio de Sá.">
		<meta name="author" content="Diego Ramos">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="css/reveal.min.css">
		<link rel="stylesheet" href="css/theme/sky.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<!-- If the query includes 'print-pdf', use the PDF print sheet -->
		<script>
			document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
		</script>

		<!--[if lt IE 9]>
        <script src="lib/js/html5shiv.js"></script>
        <![endif]-->

	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">

				<section data-state="soothe" id="page1">

                    <h3>Teste de Software</h3>
                    <br />
                    <img src="img/estacio.jpg">

				</section>


                <section data-state="soothe" id="page2">

                    <h3>Definindo o teste de software</h3>
                    <br />
                    <ul>
                        <li class="fragment">Teste de software é o processo de execução de um produto para determinar se ele atingiu suas especificações e se funcionou corretamente no ambiente para o qual foi projetado.</li>
                        <li class="fragment">O seu objetivo é revelar falhas em um produto, para que as causas dessas falhas sejam identificadas e possam ser corrigidas pela equipe de desenvolvimento antes da entrega final.</li>
                        <li class="fragment">É uma das últimas atividades que fará a revisão do produto.</li>
                    </ul>

                </section>


				<section data-state="soothe" id="page3">
					
                    <section id="page3-1">

                        <h3>A importância do teste</h3>

                        <p> A atividade de teste de software é uma área da TI que vêm crescendo ao longo 
                            dos anos e que está diretamente relacionada à necessidade de se produzir produtos de qualidade que atendam a exigências cada vez maiores. Segundo Myers <span class="fragment highlight-red">“Testar um programa é analisar um programa com a intenção de descobrir erros e defeitos”</span>. Percebemos que as empresas que produzem software vêm sofrendo cada dia mais pressões de mercado/clientes/usuário que sempre exigem produtos de alta qualidade, são pouco tolerantes com atrasos nas entregas.</p> 

                        <p> Tendo em vista atender estas necessidades, existem muitos sistemas em que uma falha ocorrida pode causar prejuízos diretos ou mensuráveis. </p>    

                    </section>
                    

                    <section id="page3-2">

                        <h4>A importância do teste - Exemplo de falha no sistema</h4>
                        <img src="img/symantec.png">

                    </section>


                    <section id="page3-3">
                        <h4>A importância do teste - Exemplo de falha no sistema</h4>

                        <p>A empresa Symantec proprietária do software antivírus Norton em junho de 2007 teve de compensar 50 mil vítimas de uma atualização que retirava arquivos de sistema de uso, dando a elas uma extensão de 12 meses da licença do Norton e uma cópia da ferramenta Norton Save & Restore 2.0.
                        </p>

                    </section>


                    <section id="page3-4">

                        <h4>A importância do teste - Exemplo de falha no sistema</h4>
                        <br /><br />
                        <h2>O ataque ao Airbus A-300</h2>

                    </section>


                    <section id="page3-5">

                        <p>No ano de 1988, ocorreu prejuízos imensiráveis quando o navio de guerra americano Vincennes derrubou um Airbus A-300 da Iran Air no Golfo Périco causando a morte de 290 pessoas incluindo 66 crianças, a falha foi atribuída ao software de reconhecimento do navio que confundiu o avião com um F-14. </p>

                        <p>
                            <figure style="float:right;">
                                <img src="img/airBusA300.png" height="200">
                                <figcaption>Airbus A-300</figcaption>
                            </figure>

                            <figure style="float:right;">
                                <img src="img/f14.png" height="200">
                                <figcaption>F-14</figcaption>
                            </figure>
                        </p>

                    </section>

				</section>


                <section data-state="soothe" id="page4">

                     <section id="page4-1">
                         
                        <h4>O processo de teste</h4>

                        <p>O Processo de Testes de Software representa uma estruturação de etapas, atividades, artefatos, papéis e responsabilidades que buscam a padronização dos trabalhos e ampliar a organização e controle dos projetos de testes.</p>
                        <p>O Processo de Teste, como qualquer outro processo deve ser revisto continuamente, de forma a ampliar sua atuação e possibilitar aos profissionais uma maior visibilidade e organização dos seus trabalhos, o que resulta numa maior agilidade e controle operacional dos projetos de testes.</p>

                     </section>   

                     <section id="page4-2">

                        <h4>O Ciclo de Vida dos Testes é composto de 5 fases: </h4>

                        <ol>
                            <li class="fragment">Planejamento</li>
                            <li class="fragment">Preparação</li>
                            <li class="fragment">Especificação</li>
                            <li class="fragment">Execução</li>
                            <li class="fragment">Entrega</li>
                        </ol>


                     </section>

                     <section id="page4-3">

                            <h2>Planejamento</h2>

                            <p>Nesta fase é elaborada a Estratégia de Teste e o Plano de Teste.</p>

                     </section>

                     <section id="page4-4">

                            <h2>Preparação</h2>

                            <p>O objetivo desta fase é preparar o Ambiente de Teste (equipamentos, pessoal, ferramentas de automação, massa de testes) para que os testes sejam executados conforme planejados.</p>

                     </section>

                     <section id="page4-5">

                            <h2>Especificação</h2>

                            <p>Nesta fase temos as seguintes atividades: Elaborar/ Revisar casos de testes e Elaborar/ Revisar roteiros de testes.</p>

                     </section>

                     <section id="page4-6">

                            <h2>Execução</h2>

                            <p>Os testes são executados e registrado os resultados obtidos.</p>

                     </section>

                     <section id="page4-7">

                            <h2>Entrega</h2>

                            <p>Esta é a última fase do ciclo de vida de testes, onde o projeto é finalizado e toda documentação é arquivada.</p>

                     </section>



                </section>

                <section data-state="soothe" id="page5">

                    <section id="page5-1">

                            <h3>Teste no programa - Depuração</h3>
                            <img src="img/casosTeste.png">
                            
                    </section>   

                    <section id="page5-2">

                            <h3>Teste no programa - Depuração</h3>
                            <br />

                            O processo de depuração frequentemente ocorre em consequência de um teste. Quando um caso de teste descobre um erro, a depuração será o processo que irá resultar na remoção deste erro. <br /> <br />
                        
                            O Processo de depuração tenta combinar o sintoma com a causa, levando assim à correção do erro. Normalmente apresentará um dentre dois resultados: <br />
                            &#10004; A causa será encontrada e corrigida; <br />
                            &#10004; A causa não será encontrada; <br />
                        
                    </section> 

                </section>

                <section data-state="soothe" id="page6">

                    <section id="page6-1">

                            <h3>Tipos de teste</h3>
                            <img src="img/caixaBrancaCaixaPreta.png">

                            <br />    
                            <ol>
                                <li>Caixa Preta</li>
                                <li>Caixa Branca</li>
                            </ol>
                            
                    </section>   

                    <section id="page6-2">

                            <h3>Teste caixa preta</h3>
                            <br />

                            O Teste de Caixa Preta não é uma alternativa às técnicas Caixa Branca, mas ao contrário, é uma abordagem complementar, que mais provavelmente descobrirá uma classe diferente de erros.
                        
                    </section> 

                    <section id="page6-3">

                            <h3>Teste caixa preta</h3>
                            <br />
                            <h5>O teste de caixa preta tenta encontrar erros nas seguintes categorias:</h5>

                            <ul>
                                <li>Funções incorretas ou faltando;</li>
                                <li>Erros de interface;</li>
                                <li>Erros em estruturas de dados ou acesso a bases de dados externas;</li>
                                <li>Erros de comportamento ou de desempenho;</li>
                                <li>Erros de inicialização e término;</li>
                            </ul>
                        
                    </section> 

                    <section id="page6-4">

                            <h3>Teste caixa branca</h3>
                            <br />

                            <ul>
                                <li>Teste de caixa branca baseia-se num minucioso exame dos detalhes procedimentais, através da definição de todos os caminhos lógicos possíveis</li>
                                <li>Infelizmente estes testes apresentam problemas logísticos, uma vez que o número destes possíveis caminhos lógicos pode ser muito grande, o que levaria a um tempo infinito</li>
                                <li>Entretanto este tipo de teste não pode ser desprezado como pouco prático, podendo-se optar por um número limitado de opções</li>
                            </ul>
                        
                    </section> 

                    <section id="page6-5">

                            <h3>O teste caixa Branca deve</h3>
                            <br />

                            <ul>
                                <li class="fragment">Garantir que todos os caminhos independentes de um módulo <br />tenham sido exercitados  pelo menos uma vez</li>
                                <li class="fragment">Exercitem todas as decisões lógicas em seus lados verdadeiro e falso</li>
                                <li class="fragment">Executem todos os ciclos nos seus limites e dentro <br />de seus intervalos operacionais</li>
                                <li class="fragment">Exercitem as estruturas de dados internas</li>
                            </ul>
                        
                    </section>

                    <section id="page6-6">

                            <h3>Tipos de Teste Caixa Branca: </h3>

                            <ul>
                                <li>Teste de Caminho Básico</li>
                                <li>Teste de Fluxo de Dados</li>
                                <li>Teste de Ciclo</li>
                            </ul>
                        
                    </section>

                    <section id="page6-7">

                            <h3>Teste do caminho básico </h3>

                            É uma técnica de caixa branca, onde calcula se a complexidade lógica do software e utiliza esta medida como base para descobrir os caminhos básicos do software e exercendo o teste de modo que todos os caminhos sejam efetuados (PRESSMAN, 2006; MCCABE, 1976).
                        
                    </section>

                    <section id="page6-8">

                            <h3>Teste de fluxo de dados</h3>

                            <ul>
                                <li>O teste de fluxo de dados mostra o fluxo de controle</li>
                                <li>Nós que representam um ou mais processos</li>
                                <li>Arestas que  representam o fluxo de controle</li>
                                <li>Regiões do grafo que são áreas limitadas pelas arestas <br />
                                    e nós (incluindo a área fora do grafo)</li>
                            </ul>

                            <img src="img/grafoFluxo.png" height="300">
                        
                    </section>

                    <section id="page6-9">

                            <h4>Teste de fluxo de dados - caminho independente</h4>

                            
                        
                    </section>
                
                </section>


                <section data-state="soothe" id="page9">

                    <h1>Será que é rápido mesmo? - Benchmarks</h1>

                    <ul>
                        <li><a href="http://www.moredevs.ro/mysql-vs-mongodb-performance-benchmark/" target="_blank">MySQL vs MongoDB</a></li>
                        <li><a href="http://www.badrit.com/blog/2013/11/18/redis-vs-mongodb-performance" target="_blank">Redis vs MongoDB</a></li>
                        <li><a href="http://byterot.blogspot.com.br/2012/11/nosql-benchmark-redis-mongodb-ravendb-cassandra-sqlserver.html" target="_blank">NoSQL benchamark: Redis, MongoDB, RavenDB, Cassandra, SQLServer</a></li>
                    </ul>

                </section>


                <section id="page10">
                    <h1>THE END</h1>
                    <h3>Questions or let's code ? :)</h3>
                </section>


				<!-- Example of nested vertical slides -->
				<section data-state="blackout" id="page11">
					<section id="page11-1">
						<h2>CRUD Operations</h2>
                        <p>O console pode ser uma ótima ferramenta de aprendizado. :)</p>
                        <pre>
                            <code contenteditable>
                                ramos@e9:~$ mongo
                                MongoDB shell version: 2.0.6
                                connecting to: test
                                >
                            </code>
                        </pre>
					</section>
					<section id="page11-2">
						<h2>Insert</h2>

                        <pre>
                            <code contenteditable>
                                > db.workshop.insert({
                                    company: 'E-novasys',
                                    website: 'http://enovasys.net.br/'
                                })
                            </code>
                        </pre>

                        <pre>
                            <code contenteditable>
                                > db.workshop.insert({
                                    company:'otherCompany',
                                    technologies: ['NoSQL', 'Oracle']
                                })
                            </code>
                        </pre>
					</section>
					<section id="page11-3">
						<h2>Consultando um registro</h2>
                        <pre>
                            <code contenteditable>
                                > db.workshop.findOne()
                                {
                                "_id" : ObjectId("52aa872c7eea1e900f218d5c"),
                                "company" : "E-novasys",
                                "website" : "http://enovasys.net.br/"
                                }
                            </code>
                        </pre>
                    </section>
					<section id="page11-4">
						<h2>Consultando um registro - filtro</h2>
                        <pre>
                            <code contenteditable>
                                > db.workshop.find({company:'E-novasys'}).pretty()
                                {
                                "_id" : ObjectId("52aa872c7eea1e900f218d5c"),
                                "company" : "E-novasys",
                                "website" : "http://enovasys.net.br/"
                                }
                            </code>
                        </pre>
                        <span>pretty() é para formatar melhor a saída</span>
					</section>
                    <section id="page11-5">
                        <h2>Checando existência de campo - filtro</h2>
                        <pre>
                            <code contenteditable>
                                > db.workshop.find( {technologies: {$exists: true} } )
                                { "_id" : ObjectId("52aa8cf4c7b09b7b3ff24969"), "company" : "otherCompany", "technologies" : [ "NoSQL", "Oracle", "Linux" ] }
                            </code>
                        </pre>
                    </section>
                    <section id="page11-6">
                        <h2>Quantidade de registros</h2>
                        <pre>
                            <code contenteditable>
                                > db.workshop.count()
                                2
                            </code>
                        </pre>
                    </section>
                    <section id="page11-7">
                        <h2>Atualizando registro</h2>
                        <pre>
                            <code contenteditable>
                                > db.workshop.update({ company:'E-novasys' }, {$set: { technologies:['Oracle', 'Linux'] } } )
                            </code>
                        </pre>
                        <span>Caso o campo não exista, o mongoDB irá inserir no documento</span>
                    </section>
                    <section id="page11-8">
                        <h2>Removendo registro</h2>
                        <pre>
                            <code contenteditable>
                                > db.workshop.remove({company:'otherCompany'})
                            </code>
                        </pre>
                    </section>

                    <section id="page11-9">
                        <h2>Comandos úteis</h2>
                        <ul>
                            <li>Mostrar coleções do banco atual: <strong>show collections</strong> </li>
                            <li>Mostrar bancos de dados do servidor: <strong>show dbs</strong> </li>
                            <li>Trocar de banco: <strong>use outroBanco</strong> </li>
                        </ul>
                    </section>
				</section>


                <section id="page12">
                    <h2>Links Úteis</h2>
                    <ul>
                        <li><a href="http://docs.mongodb.org/manual/reference/operator/" target="_blank">Operadores MongoDB</a></li>
                        <li><a href="http://docs.mongodb.org/manual/reference/limits/" target="_blank">Limitações MongoDB</a></li>
                        <li><a href="http://www.mongodb.org/downloads" target="_blank">MongoDB Download</a></li>
                        <li><a href="https://github.com/hakimel/reveal.js" target="_blank">Reveal JS ( Utilizado para a apresentação )</a></li>
                        <li><a href="http://mongoosejs.com/" target="_blank">Mongoose</a></li>
                    </ul>
                </section>


                <section id="page13">
                    <h1>Obrigado!</h1>
                </section>

			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
					// { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});

		</script>

	</body>
</html>
